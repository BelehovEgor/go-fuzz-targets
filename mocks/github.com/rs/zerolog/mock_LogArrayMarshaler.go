// Code generated by mockery v2.51.1. DO NOT EDIT.

package zerolog

import (
	zerolog "github.com/rs/zerolog"
	mock "github.com/stretchr/testify/mock"
)

// MockLogArrayMarshaler is an autogenerated mock type for the LogArrayMarshaler type
type MockLogArrayMarshaler struct {
	mock.Mock
}

type MockLogArrayMarshaler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockLogArrayMarshaler) EXPECT() *MockLogArrayMarshaler_Expecter {
	return &MockLogArrayMarshaler_Expecter{mock: &_m.Mock}
}

// MarshalZerologArray provides a mock function with given fields: a
func (_m *MockLogArrayMarshaler) MarshalZerologArray(a *zerolog.Array) {
	_m.Called(a)
}

// MockLogArrayMarshaler_MarshalZerologArray_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'MarshalZerologArray'
type MockLogArrayMarshaler_MarshalZerologArray_Call struct {
	*mock.Call
}

// MarshalZerologArray is a helper method to define mock.On call
//   - a *zerolog.Array
func (_e *MockLogArrayMarshaler_Expecter) MarshalZerologArray(a interface{}) *MockLogArrayMarshaler_MarshalZerologArray_Call {
	return &MockLogArrayMarshaler_MarshalZerologArray_Call{Call: _e.mock.On("MarshalZerologArray", a)}
}

func (_c *MockLogArrayMarshaler_MarshalZerologArray_Call) Run(run func(a *zerolog.Array)) *MockLogArrayMarshaler_MarshalZerologArray_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*zerolog.Array))
	})
	return _c
}

func (_c *MockLogArrayMarshaler_MarshalZerologArray_Call) Return() *MockLogArrayMarshaler_MarshalZerologArray_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockLogArrayMarshaler_MarshalZerologArray_Call) RunAndReturn(run func(*zerolog.Array)) *MockLogArrayMarshaler_MarshalZerologArray_Call {
	_c.Run(run)
	return _c
}

// NewMockLogArrayMarshaler creates a new instance of MockLogArrayMarshaler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLogArrayMarshaler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLogArrayMarshaler {
	mock := &MockLogArrayMarshaler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
